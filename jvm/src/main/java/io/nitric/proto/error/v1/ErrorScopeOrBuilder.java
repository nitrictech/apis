// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/error/v1/error.proto

package io.nitric.proto.error.v1;

public interface ErrorScopeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:nitric.error.v1.ErrorScope)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The API service invoked, e.g. 'Service.Method'.
   * </pre>
   *
   * <code>string service = 1;</code>
   * @return The service.
   */
  java.lang.String getService();
  /**
   * <pre>
   * The API service invoked, e.g. 'Service.Method'.
   * </pre>
   *
   * <code>string service = 1;</code>
   * @return The bytes for service.
   */
  com.google.protobuf.ByteString
      getServiceBytes();

  /**
   * <pre>
   * The plugin method invoked, e.g. 'PluginService.Method'.
   * </pre>
   *
   * <code>string plugin = 2;</code>
   * @return The plugin.
   */
  java.lang.String getPlugin();
  /**
   * <pre>
   * The plugin method invoked, e.g. 'PluginService.Method'.
   * </pre>
   *
   * <code>string plugin = 2;</code>
   * @return The bytes for plugin.
   */
  com.google.protobuf.ByteString
      getPluginBytes();

  /**
   * <pre>
   * The plugin method arguments, ensure only non-sensitive data is specified.
   * </pre>
   *
   * <code>map&lt;string, string&gt; args = 3;</code>
   */
  int getArgsCount();
  /**
   * <pre>
   * The plugin method arguments, ensure only non-sensitive data is specified.
   * </pre>
   *
   * <code>map&lt;string, string&gt; args = 3;</code>
   */
  boolean containsArgs(
      java.lang.String key);
  /**
   * Use {@link #getArgsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getArgs();
  /**
   * <pre>
   * The plugin method arguments, ensure only non-sensitive data is specified.
   * </pre>
   *
   * <code>map&lt;string, string&gt; args = 3;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getArgsMap();
  /**
   * <pre>
   * The plugin method arguments, ensure only non-sensitive data is specified.
   * </pre>
   *
   * <code>map&lt;string, string&gt; args = 3;</code>
   */

  java.lang.String getArgsOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <pre>
   * The plugin method arguments, ensure only non-sensitive data is specified.
   * </pre>
   *
   * <code>map&lt;string, string&gt; args = 3;</code>
   */

  java.lang.String getArgsOrThrow(
      java.lang.String key);
}
