// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/faas/v1/faas.proto

package io.nitric.proto.faas.v1;

public interface ApiWorkerOptionsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:nitric.faas.v1.ApiWorkerOptions)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Apply security definitions to this operation
   * </pre>
   *
   * <code>map&lt;string, .nitric.faas.v1.ApiWorkerScopes&gt; security = 1;</code>
   */
  int getSecurityCount();
  /**
   * <pre>
   * Apply security definitions to this operation
   * </pre>
   *
   * <code>map&lt;string, .nitric.faas.v1.ApiWorkerScopes&gt; security = 1;</code>
   */
  boolean containsSecurity(
      java.lang.String key);
  /**
   * Use {@link #getSecurityMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, io.nitric.proto.faas.v1.ApiWorkerScopes>
  getSecurity();
  /**
   * <pre>
   * Apply security definitions to this operation
   * </pre>
   *
   * <code>map&lt;string, .nitric.faas.v1.ApiWorkerScopes&gt; security = 1;</code>
   */
  java.util.Map<java.lang.String, io.nitric.proto.faas.v1.ApiWorkerScopes>
  getSecurityMap();
  /**
   * <pre>
   * Apply security definitions to this operation
   * </pre>
   *
   * <code>map&lt;string, .nitric.faas.v1.ApiWorkerScopes&gt; security = 1;</code>
   */

  io.nitric.proto.faas.v1.ApiWorkerScopes getSecurityOrDefault(
      java.lang.String key,
      io.nitric.proto.faas.v1.ApiWorkerScopes defaultValue);
  /**
   * <pre>
   * Apply security definitions to this operation
   * </pre>
   *
   * <code>map&lt;string, .nitric.faas.v1.ApiWorkerScopes&gt; security = 1;</code>
   */

  io.nitric.proto.faas.v1.ApiWorkerScopes getSecurityOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * explicitly disable security for this endpoint
   * We need to do this as the default value of a repeated field
   * is always empty so there is no way of knowing if security is explicitly disabled
   * </pre>
   *
   * <code>bool security_disabled = 2;</code>
   * @return The securityDisabled.
   */
  boolean getSecurityDisabled();
}
