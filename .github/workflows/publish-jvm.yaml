name: Publish JVM base SDK

on:
  release:
    types: [published]

defaults:
  run:
    shell: bash
    working-directory: jvm

jobs:
  # Generate the SDKs
  publish:
    # Ensure they share a concurrency group
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Maven Central Repository
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Install gpg secret key
        run: |
          cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG

      # Remove leading 'v' from version string
      - name: Normalize version string
        id: normalize_version
        run: |
          version="${{ github.event.release.tag_name }}"
          echo "::set-output name=VERSION::`echo ${version:1}`"

      - name: Set Version Production
        if: "!github.event.release.prerelease"
        run: mvn versions:set -DgenerateBackupPoms=false -DnewVersion=${{ steps.normalize_version.outputs.VERSION }}

      - name: Set Version Snapshot
        if: "github.event.release.prerelease"
        run: mvn versions:set -DgenerateBackupPoms=false -DnewVersion=${{ steps.normalize_version.outputs.VERSION }}-SNAPSHOT

      - name: Publish to Maven Central repository
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        run: |
          mvn \
          --no-transfer-progress \
          --batch-mode \
          -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }} \
          clean deploy